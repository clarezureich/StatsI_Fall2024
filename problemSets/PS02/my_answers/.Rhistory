plot(expenditure$X2, expenditure$Y,col=2, ylab = "Per Capita Housing Expenditure In State", xlab = "Financially Insecure Residents In \nState, per 100,000", main = "Housing Expenditure vs\n Financially Insecure Residents")
plot(expenditure$X3, expenditure$Y,col=3, ylab = "Per Capita Housing Expenditure In State", xlab = "Urban Area Residents In State, per 1,000", main = "Housing Expenditure vs\n Urban Area Residents")
plot(expenditure$X1, expenditure$X2,col=4, xlab = "Per Capita Personal Income In State", ylab = "Financially Insecure Residents In State, per 100,000", main = "Financially Insecure Residents vs\n Personal Income")
plot(expenditure$X1, expenditure$X3,col=5, xlab = "Per Capita Personal Income In State", ylab = "Urban Area Residents In State, per 1,000", main = "Urban Area Residents vs\n Personal Income")
plot(expenditure$X2, expenditure$X3,col=6, xlab = "Financially Insecure Residents In \nState, per 100,000", ylab = "Urban Area Residents In State, per 1,000", main = "Urban Area Residents vs\n Financially Insecure Residents")
dev.off()
#Graph 1: Loose linear positive correlation
#Graph 2: Non-linear correlation, loose non-linear correlation
#Graph 3: Loose linear, positive correlation
#Graph 4: Nonlinear correlation
#Graph 5: loose linear positive
#Graph 6: Nonlinear
#Graph between Y and Region
png(file="housing_expenditure_region__scatter_plot.png")
par(mfrow = c(1,1))
region <- factor(expenditure$Region, levels = c(1, 2, 3, 4), labels = c("Northeast", "North Central", "South", "West"))
expenditure$name <- region
plot(region, expenditure$Y, ylab = "Housing expenditure", xlab = "Region", main = "Housing Expenditure by\n Region")
#The west, Region 4, has the highest per capita spending on housing
dev.off()
png(file="housing_expenditure_personal_income__scatter_plot.png")
plot(expenditure$X1, expenditure$Y,col=expenditure$Region,
ylab = "Housing expenditure",
pch = expenditure$Region,
xlab = "Personal Income",
main = "Housing Expenditure vs\n Personal Income")
legend("bottomright", legend=unique(expenditure$name),
col=unique(expenditure$Region),
pch=unique(expenditure$Region))
dev.off()
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
#####################
# Problem 1
#####################
# Question 1
scores <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#Find the mean, standard deviation, and standard error of the IQ scores
mean <-mean(scores)
sd <- sd(scores)
se <- sd/sqrt(length(scores))
# Find the confidence interval, using t-score, for 90%
t <- qt((.9+(1-.9)/2), df=length(scores)-1)
t
lower_90 <- mean - t*se
upper_90 <- mean + t*se
lower_90
upper_90
# Question 2
t.test(scores, mu = 100, alternative = "greater", conf.level = 0.95)
#####################
# Problem 2
#####################
#Relationships between Y and X1, X2, X3
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2024/main/datasets/expenditure.txt", header=T)
png(file="political_economy_scatter_plot.png",
width = 500,
height = 400)
par(mfrow = c(2,3))
plot(expenditure$X1, expenditure$Y,col=1, ylab = "Per Capita Housing Expenditure In State", xlab = "Per Capita Personal Income In State", main = "Housing Expenditure vs\n Personal Income")
plot(expenditure$X2, expenditure$Y,col=2, ylab = "Per Capita Housing Expenditure In State", xlab = "Financially Insecure Residents In \nState, per 100,000", main = "Housing Expenditure vs\n Financially Insecure Residents")
plot(expenditure$X3, expenditure$Y,col=3, ylab = "Per Capita Housing Expenditure In State", xlab = "Urban Area Residents In State, per 1,000", main = "Housing Expenditure vs\n Urban Area Residents")
plot(expenditure$X1, expenditure$X2,col=4, xlab = "Per Capita Personal Income In State", ylab = "Financially Insecure Residents In State, per 100,000", main = "Financially Insecure Residents vs\n Personal Income")
plot(expenditure$X1, expenditure$X3,col=5, xlab = "Per Capita Personal Income In State", ylab = "Urban Area Residents In State, per 1,000", main = "Urban Area Residents vs\n Personal Income")
plot(expenditure$X2, expenditure$X3,col=6, xlab = "Financially Insecure Residents In \nState, per 100,000", ylab = "Urban Area Residents In State, per 1,000", main = "Urban Area Residents vs\n Financially Insecure Residents")
dev.off()
#Graph 1: Loose linear positive correlation
#Graph 2: Non-linear correlation, loose non-linear correlation
#Graph 3: Loose linear, positive correlation
#Graph 4: Nonlinear correlation
#Graph 5: loose linear positive
#Graph 6: Nonlinear
#Graph between Y and Region
png(file="housing_expenditure_region__scatter_plot.png")
par(mfrow = c(1,1))
region <- factor(expenditure$Region, levels = c(1, 2, 3, 4), labels = c("Northeast", "North Central", "South", "West"))
expenditure$name <- region
plot(region, expenditure$Y, ylab = "Housing expenditure", xlab = "Region", main = "Housing Expenditure by\n Region")
#The west, Region 4, has the highest per capita spending on housing
dev.off()
png(file="housing_expenditure_personal_income__scatter_plot.png")
plot(expenditure$X1, expenditure$Y,col=expenditure$Region,
ylab = "Housing expenditure",
pch = expenditure$Region,
xlab = "Personal Income",
main = "Housing Expenditure vs\n Personal Income")
legend("bottomright", legend=unique(expenditure$name),
col=unique(expenditure$Region),
pch=unique(expenditure$Region))
dev.off()
plot(expenditure$X1, expenditure$Y,col=1, ylab = "Per Capita Housing Expenditure In State", xlab = "Per Capita Personal Income In State", main = "Housing Expenditure vs\n Personal Income")
plot(expenditure$X2, expenditure$Y,col=2, ylab = "Per Capita Housing Expenditure In State", xlab = "Financially Insecure Residents In \nState, per 100,000", main = "Housing Expenditure vs\n Financially Insecure Residents")
plot(expenditure$X3, expenditure$Y,col=3, ylab = "Per Capita Housing Expenditure In State", xlab = "Urban Area Residents In State, per 1,000", main = "Housing Expenditure vs\n Urban Area Residents")
png(file="political_economy_scatter_plot.png",
width = 500,
height = 400)
par(mfrow = c(2,3))
plot(expenditure$X1, expenditure$Y,col=1, ylab = "Per Capita Housing Expenditure In State", xlab = "Per Capita Personal Income In State", main = "Housing Expenditure vs\n Personal Income")
plot(expenditure$X2, expenditure$Y,col=2, ylab = "Per Capita Housing Expenditure In State", xlab = "Financially Insecure Residents In \nState, per 100,000", main = "Housing Expenditure vs\n Financially Insecure Residents")
plot(expenditure$X3, expenditure$Y,col=3, ylab = "Per Capita Housing Expenditure In State", xlab = "Urban Area Residents In State, per 1,000", main = "Housing Expenditure vs\n Urban Area Residents")
plot(expenditure$X1, expenditure$X2,col=4, xlab = "Per Capita Personal Income In State", ylab = "Financially Insecure Residents In State, per 100,000", main = "Financially Insecure Residents vs\n Personal Income")
plot(expenditure$X1, expenditure$X3,col=5, xlab = "Per Capita Personal Income In State", ylab = "Urban Area Residents In State, per 1,000", main = "Urban Area Residents vs\n Personal Income")
plot(expenditure$X2, expenditure$X3,col=6, xlab = "Financially Insecure Residents In \nState, per 100,000", ylab = "Urban Area Residents In State, per 1,000", main = "Urban Area Residents vs\n Financially Insecure Residents")
par(mfrow = c(2,3))
plot(expenditure$X1, expenditure$Y,col=1, ylab = "Per Capita Housing Expenditure In State", xlab = "Per Capita Personal Income In State", main = "Housing Expenditure vs\n Personal Income")
plot(expenditure$X2, expenditure$Y,col=2, ylab = "Per Capita Housing Expenditure In State", xlab = "Financially Insecure Residents In \nState, per 100,000", main = "Housing Expenditure vs\n Financially Insecure Residents")
plot(expenditure$X3, expenditure$Y,col=3, ylab = "Per Capita Housing Expenditure In State", xlab = "Urban Area Residents In State, per 1,000", main = "Housing Expenditure vs\n Urban Area Residents")
plot(expenditure$X1, expenditure$X2,col=4, xlab = "Per Capita Personal Income In State", ylab = "Financially Insecure Residents In State, per 100,000", main = "Financially Insecure Residents vs\n Personal Income")
plot(expenditure$X1, expenditure$X3,col=5, xlab = "Per Capita Personal Income In State", ylab = "Urban Area Residents In State, per 1,000", main = "Urban Area Residents vs\n Personal Income")
cor(expenditure$X1, expenditure$Y)
cor(expenditure$X1, expenditure$Y)
cor(expenditure$X2, expenditure$Y)
cor(expenditure$X3, expenditure$Y)
cor(expenditure$X1, expenditure$X2)
cor(expenditure$X1, expenditure$X3)
cor(expenditure$X2, expenditure$X3)
plot(expenditure$X2, expenditure$Y,col=2, ylab = "Per Capita Housing Expenditure In State", xlab = "Financially Insecure Residents In \nState, per 100,000", main = "Housing Expenditure vs\n Financially Insecure Residents")
plot(expenditure$X2, expenditure$Y,col=2, ylab = "Per Capita Housing Expenditure In State", xlab = "Financially Insecure Residents In \nState, per 100,000", main = "Housing Expenditure vs\n Financially Insecure Residents")
plot(expenditure$X3, expenditure$Y,col=3, ylab = "Per Capita Housing Expenditure In State", xlab = "Urban Area Residents In State, per 1,000", main = "Housing Expenditure vs\n Urban Area Residents")
A[, 2, ]
l <- list(
mapply(assign, letters, 1:26),
A = array(1:60, c(5,2,3)),
M = matrix(1:50, c(10,5)),
test = t.test(rnorm(100, -1), rnorm(100, 2)),
model = lm(
y ~ x + z,
data = list(y = rnorm(100), x = rnorm(100), z = rnorm(100))
)
)
A[, 2, ]
#Part b
A <- l[["A"]]
A[, 2, ]
A[, 2, , drop=FALSE]
#Part b
M <- l[["M"]]
oddrows <- M[seq(from = 1, to =10, by = 2),]
oddrows
set.seed(2024)
vec <- sample(c("1", "0", "o"), size = 100, replace = TRUE)
typeof(vec)
numeric <-as.numeric(vec)
prop_NAs <- sum(is.na(numeric)) / length(numeric)
prop_NAs
numeric[is.na(numeric)] <- 0
table(vec)
#Question 4
set.seed(2024)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
educ_labels <- c("No formal eductions", "Primary Eduction", "Secondary Eduction", "College Eduction", "Post-graduate Education")
educ_factor <- factor(educ, levels = 0:4, labels = educ_labels)
table(educ_factor)
new_table_order <- relevel(educ_factor, ref = "Secondary Eduction")
table(new_table_order)
names(which.max(table(educ)))
new_table_order <- relevel(educ_factor, ref = names)
new_table_order <- relevel(educ_factor, ref = names(which.max(table(educ))))
x <- 10
g01 <- function() {
x <- 20
x
}
g01()
x <- 1
g04 <- function() {
y <- 2
i <- function() {
z <- 3
c(x, y, z)
}
i()
}
g04()
g07 <- function(x) x + 1
g08 <- function() {
g07 <- function(x) x + 100
g07(10)
}
g08()
g11 <- function() {
if (!exists("a")) {
a <- 1
} else {
a <- a + 1
}
a
}
g11()
g11()
g11(a)
?ls
ls(x)
x=ls()
x
?args
args(sample)
args(missing)
x
`second<-` <- function(x, value) {
x[2] <- value
x
}
second
'second'
second(x)
second(x, x)
'second'(x, x)
'second<-'(x, x)
second<-(x, x)
second<-
second<-
print(second<-)
'second<-' <- function(x, value) {
x[2] <- value
x
}
second<-
`second<-` <- function(x, value) {
x[2] <- value
x
}
x <- 1:10
second(x) <- 5L
x
`second<-` <- function(x, value) {
x[2] <- value
x
}
x <- 1:10
second(x) <- 5L
x
`second<-` <- function(x, value) {
x[2] <- value
x
}
x <- 1:10
x
second(x) <- 5L
x
library(rlang)
rlang::env()
e1
e1 <- env(
a = FALSE,
b = "a",
c = 2.3,
d = 1:3,
)
e1
e1$d
env_print(e1)
e1$d <- e1
env_print(e1)
globalenv()
environment()
e1
environment()
e1()
e1$d <- e1
env_print(e1)
environment()
e1env()
environment(e1)
search()
base::search()
r_lang::search_envs()
rlang::search_envs()
search_envs()
library(purrr)
library(purrr)
triple <- function(x) x * 3
map(1:3, triple)
map(1:4, triple)
#> [[1]]
#> [1] 3
#>
#> [[2]]
#> [1] 6
#>
#> [[3]]
#> [1] 9
#>
lapply(1:4, triple)
tryCatch(
message = function(cnd) cat("Caught a message!\n"),
{
message("Someone there?")
message("Why, yes!")
}
)
tryCatch(
message = function(cnd) cat("Caught a message!\n"),
{
message("Someone there?")
message("Why, yes!")
}
)
withCallingHandlers(
message = function(cnd) cat("Caught a message!\n"),
{
message("Someone there?")
message("Why, yes!")
}
)
withCallingHandlers(
message = function(cnd) cat("Caught a message!\n"),
{
message("Someone there?")
message("Why, yes!")
}
)
?cnd
tryCatch(
message = function(cnd) cat("Caught a message!\n"),
{
message("Someone there?")
message("Why, yes!")
}
)
withCallingHandlers(
message = function(cnd) cat("Caught a message!\n"),
{
message("Someone there?")
message("Why, yes!")
}
)
tryCatch(
message = function(cnd) cat("Caught a message!\n"),
{
message("Someone there?")
message("Why, yes!")
}
)
withCallingHandlers(
message = function(cnd) cat("Caught a message!\n"),
{
message("Someone there?")
message("Why, yes!")
}
)
x <- runif(100, 0,1)
y <- 2 + x*1.5 + rnorm(100, 0, 1)
reg_DF <- as.data.frame(cbind(x, y))
lm (y~x)
reg1 <- lm (y~x)
sigma(reg1)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
#Set working directory to answers file path
setwd("/Users/clarezureich/Documents/GitHub/StatsI_Fall2024/problemSets/PS02/my_answers")
lapply(c(),  pkgTest)
#Create contingency table
bribery_table <- matrix(
c(14,7,6,7,7,1),
nrow = 2,
ncol = 3,
byrow = FALSE
)
rownames(bribery_table) = c("Upper Class",
"Lower Class")
colnames(bribery_table) = c("Not Stopped",
"Bribe Requested",
"Stopped/Given Warning")
#Step 3: Calculate a Test Statistic
row_total <- rowSums(bribery_table)
column_total <- colSums(bribery_table)
table_total <- sum(bribery_table)
df = (nrow(bribery_table)-1)*(ncol(bribery_table)-1)
#Expected table
expected_table <- matrix(0, nrow = 2, ncol = 3)
for (i in 1:nrow(bribery_table)) {
for (j in 1:ncol(bribery_table)) {
expected_table[i, j] <- (row_total[i] * column_total[j]) / table_total
}
}
rownames(expected_table) <- rownames(bribery_table)
colnames(expected_table) <- colnames(bribery_table)
chi_square <- sum((bribery_table-expected_table)^2/expected_table)
chi_square
###
#Part (b)
###
p_value = pchisq(chi_square, df = df, lower.tail = FALSE)
p_value
###
#Part (c)
###
standardized_residuals <- (bribery_table - expected_table) / sqrt(expected_table)
standardized_residuals
adjusted_residuals <- matrix(0, nrow = 2, ncol = 3)
row_prop = row_total/table_total
col_prop = column_total/table_total
residuals <- matrix(0, nrow = 2, ncol = 3)
for (i in 1:nrow(bribery_table)) {
for (j in 1:ncol(bribery_table)) {
adjusted_residuals[i, j] <- (bribery_table[i, j] - expected_table[i, j]) /
sqrt(expected_table[i, j] *
(1-row_prop[i]) *
(1-col_prop[j]))
}
}
rownames(expected_table) <- rownames(bribery_table)
colnames(expected_table) <- colnames(bribery_table)
adjusted_residuals
#####################
# Problem 2
#####################
women <- read.csv("women.csv")
#add assumptions and scatterplot
str(women)
head(women)
regression_model <- lm(water ~ reserved, data = women)
summary(regression_model)
coefficients(regression_model)
###
###
#Part (c)
###
#Part (c)
###
###
#Part (c)
###
#There is sufficient evidence to reject the null hypotheses that there is no relationship between the reservation
###
#Part (c)
###
#There is sufficient evidence to reject the null hypotheses that there is no relationship between the reservation
#policy and the number of new/repaired drinking water #facilities, at a 95% confidence level, as the p-value of
###
#Part (c)
###
#There is sufficient evidence to reject the null hypotheses that there is no relationship between the reservation
#policy and the number of new/repaired drinking water #facilities, at a 95% confidence level, as the p-value of
#the coefficient is .0197. For each additional female leader, the number of new or repaired drinking water
###
#Part (c)
###
#There is sufficient evidence to reject the null hypotheses that there is no relationship between the reservation
#policy and the number of new/repaired drinking water #facilities, at a 95% confidence level, as the p-value of
#the coefficient is .0197. For each additional female leader, the number of new or repaired drinking water
#facilities will, on average, increase by 9.25.
###
#Part (c)
###
#There is sufficient evidence to reject the null hypotheses that there is no relationship between the reservation
#policy and the number of new/repaired drinking water #facilities, at a 95% confidence level, as the p-value of
#the coefficient is .0197. For each additional female leader, the number of new or repaired drinking water
#facilities will, on average, increase by 9.25.
###
#Part (c)
###
#There is sufficient evidence to reject the null hypotheses that there is no relationship between the reservation
#policy and the number of new/repaired drinking water #facilities, at a 95% confidence level, as the p-value of
#the coefficient is .0197. For each additional female leader, the number of new or repaired drinking water
#facilities will, on average, increase by 9.25.
View(standardized_residuals)
View(standardized_residuals)
View(adjusted_residuals)
View(adjusted_residuals)
summary(regression_model)
getwd()
write.table(summary(regression_model), file = “summary_table.txt”, sep = “”)
write.table(summary(regression_model), file = “summary_table.txt”)
summary_output <- capture.output(summary(regression_model))
writeLines(summary_output, "regression_summary.txt")
png("regression_summary.png", width = 800, height = 600)
png("regression_summary.png", width = 800, height = 600)
plot(summary(regression_model))
dev.off()
summary(regression_model)
