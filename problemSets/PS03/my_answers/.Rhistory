PATH <- "/Users/clarezureich/Documents/Applied Social Data Science/Computer Programming/kaggle_survey_2022_responses.csv"
questions <- readr::read_csv(PATH, n_max = 1)
kaggle2022 <- readr::read_csv(PATH, col_names = names(questions), skip = 2)
View(questions)
View(questions)
View(kaggle2022)
View(kaggle2022)
#Read and load file
#Import Kaggle 2022 data set and remove first two rows of questions
PATH <- "/Users/clarezureich/Documents/Applied Social Data Science/Computer Programming/kaggle_survey_2022_responses.csv"
questions <- readr::read_csv(PATH, n_max = 1)
kaggle2022 <- readr::read_csv(PATH, col_names = names(questions), skip = 2)
#Load tidy and dplyr packages
library(dplyr)
library(tidyr)
#Evaluate the entire Kaggle data frame
head(kaggle2022, 1)
#Subset Programming Questions (Question 12, part 1-15)
kaggle2022_Q12 <- kaggle2022 %>%
select(starts_with("Q12"))
#Find the number of rows in data frame
total <- nrow(kaggle2022_Q12)
#Assign ID number to each respondent
kaggle2022_Q12 <- cbind(Respondent_ID = 1:nrow(kaggle2022_Q12),
kaggle2022_Q12)
#Pivot long to gather columns in a variable pair
kaggle2022_Q12_long <- kaggle2022_Q12 %>%
pivot_longer(cols = -Respondent_ID,
names_to = "Language",
values_to = "Used") %>%
filter(!is.na(Used)  & Used != "")  # Remove rows where "Used" is NA/blank
kaggle2022_Q12_long
#Find the language frequency, as a data frame
language_percentage <- kaggle2022_Q12_long %>%
group_by(Used) %>%
summarise(Count = n()) %>%
mutate(Percentage = Count /total * 100) %>%
arrange(desc(Percentage))
language_percentage
# Your code goes here
View(kaggle2022)
View(kaggle2022)
View(kaggle2022_Q12)
View(kaggle2022_Q12)
responses <- PATH
#colnames(responses) #checking column names
question12 <- responses %>% select(starts_with("Q12")) #subsetting only Q12 questions
responses <- PATH
#colnames(responses) #checking column names
question12 <- responses %>% select(starts_with("Q12")) #subsetting only Q12 questions
responses <- PATH
#colnames(responses) #checking column names
question12 <- responses %>% select(starts_with("Q12")) #subsetting only Q12 questions
responses <- PATH
#colnames(responses) #checking column names
question12 <- responses %>% select(starts_with("Q12")) #subsetting only Q12 questions
responses <- PATH
#colnames(responses) #checking column names
question12 <- responses %>% select(starts_with("Q12")) #subsetting only Q12 questions
library(readr)
kaggle_survey_2022_responses <- read_csv("Documents/Applied Social Data Science/Computer Programming/kaggle_survey_2022_responses.csv")
View(kaggle_survey_2022_responses)
responses <- kaggle_survey_2022_responses
#colnames(responses) #checking column names
question12 <- responses %>% select(starts_with("Q12")) #subsetting only Q12 questions
question12 <- question12[-1, ] #remove the first row showing the question
#colnames(question12) #checking colnames to ensure first row removed
pivot12 <- question12 %>%
pivot_longer(cols = everything(),
names_to = "program",
values_to = "used") %>%
filter(!is.na(used) & used != "") #dropping rows with no responses (blanks)
language_count <- pivot12 %>%  #calculating program frequencies
group_by(used) %>%
summarise(count = n()) %>%
ungroup()
total <- nrow(language_count)
language_count$percentage <- (language_count$count/total)*100 #calculating percentages
colnames(language_count) <- c("language", "count", "percentage") #formatting
high_to_low_languages <- language_count %>% arrange(desc(percentage)) #arranging by popularity
high_to_low_languages
responses <- kaggle_survey_2022_responses
#colnames(responses) #checking column names
question12 <- responses %>% select(starts_with("Q12")) #subsetting only Q12 questions
question12 <- question12[-1, ] #remove the first row showing the question
#colnames(question12) #checking colnames to ensure first row removed
pivot12 <- question12 %>%
pivot_longer(cols = everything(),
names_to = "program",
values_to = "used") %>%
filter(!is.na(used) & used != "") #dropping rows with no responses (blanks)
language_count <- pivot12 %>%  #calculating program frequencies
group_by(used) %>%
summarise(count = n()) %>%
ungroup()
total <- nrow(question12)
language_count$percentage <- (language_count$count/total)*100 #calculating percentages
colnames(language_count) <- c("language", "count", "percentage") #formatting
high_to_low_languages <- language_count %>% arrange(desc(percentage)) #arranging by popularity
high_to_low_languages
language_percentage
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2024/main/datasets/incumbents_subset.csv")
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# set wd for current folder
setwd("~/Documents/GitHub/StatsI_Fall2024/problemSets/PS03/my_answers")
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2024/main/datasets/incumbents_subset.csv")
head(inc.sub)
View(inc.sub)
#Problem 1
#Part 1: Run the regression
regression_model1 <- lm(voteshare ~ difflog, data = inc.sub)
summary(regression_model1)
#Part 2: Scatterplot
plot(inc.sub$difflog, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: Incumbent's Vote Share vs Difference in Spending Logged")
abline(regression_model1, col=3, lwd = 2)
#Part 3: Residuals
regression_residuals1 <- residuals(regression_model1)
summary(regression_residuals1)
#Problem 2
#Part 1
regression_model2 <- lm(presvote ~ difflog, data = inc.sub)
summary(regression_model2)
#Part 2
plot(inc.sub$difflog, inc.sub$presvote,
ylab = "# of Incumbent Party's Presidential Candidates",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged")
abline(regression_model2, col=4, lwd = 2)
#Part 3: Residuals
regression_residuals2 <- residuals(regression_model2)
summary(regression_residuals2)
#Problem 3
#Part 1
regression_model3 <- lm(voteshare ~ presvote, data = inc.sub)
summary(regression_model3)
#Part 2
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's")
abline(regression_model3, col=2, lwd = 2)
#Problem 4
#Part 1
residual_regression_model <- lm(regression_residuals1 ~ regression_residuals2)
summary(residual_regression_model)
#Part 2
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 vs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
#Problem 5
#Part 1
multivariate_regression <- lm(voteshare ~ difflog + presvote , data = inc.sub)
summary(multivariate_regression)
#Part 2
#Part 2
#yhat(i) = betahat0 + (betahat1 * x0)
#Part 3
#Part 3
#The slope coefficient of the regression_residual2 variable in the residual regression model (.257) is equal to the slope coefficient of the presvote variable in the multivariate formula (.257).
#Part 3
#The slope coefficient of the regression_residual2 variable in the residual regression model (.257) is equal to the slope coefficient of the presvote variable in the multivariate formula (.257).
#This is because the slope coefficients both represent the effect of presvote on voteshare after taking out the effects of difflog from both voteshare and presvote. This is the partial effect of presvote.
#Part 3
#The slope coefficient of the regression_residual2 variable in the residual regression model (.257) is equal to the slope coefficient of the presvote variable in the multivariate formula (.257).
#This is because the slope coefficients both represent the effect of presvote on voteshare after taking out the effects of difflog from both voteshare and presvote. This is the partial effect of presvote.
#In regression_residuals1, we first found the residual of the linear relationship between votesahre and difflog (regression_model1), which is the part of votesahre that is not linearly related to difflog).
#Part 3
#The slope coefficient of the regression_residual2 variable in the residual regression model (.257) is equal to the slope coefficient of the presvote variable in the multivariate formula (.257).
#This is because the slope coefficients both represent the effect of presvote on voteshare after taking out the effects of difflog from both voteshare and presvote. This is the partial effect of presvote.
#In regression_residuals1, we first found the residual of the linear relationship between votesahre and difflog (regression_model1), which is the part of votesahre that is not linearly related to difflog).
#In regression_residuals2, we found the resiual of the linear relationship between presvote and difflog (regression_model2), which is the part of presvote that is not linearly related to difflog.
#Part 3
#The slope coefficient of the regression_residual2 variable in the residual regression model (.257) is equal to the slope coefficient of the presvote variable in the multivariate formula (.257).
#This is because the slope coefficients both represent the effect of presvote on voteshare after taking out the effects of difflog from both voteshare and presvote. This is the partial effect of presvote.
#In regression_residuals1, we first found the residual of the linear relationship between votesahre and difflog (regression_model1), which is the part of votesahre that is not linearly related to difflog).
#In regression_residuals2, we found the resiual of the linear relationship between presvote and difflog (regression_model2), which is the part of presvote that is not linearly related to difflog.
#We then found the linear relationship between the voteshare residual (regression_residual1) and the presvote residual (regression_residual2). The result is the coeffient which represents the effect of presvote on voteshare after taking out the effects of difflog from voteshare and presvote.
cor(inc.sub)
cor_yx1 <- 0.606086592
cor_yx2 <- 0.453667219
cor_x1x2 <- 0.296565289
par_cor_num <- cor_yx1 - (cor_yx2*cor_x1x2)
par_cor_denom <- sqrt((1-(cor_yx2^2))*(1-(cor_x1x2)^2))
par_cor <- par_cor_num / par_cor_denom
par_cor
par_cor^2
# set wd for current folder
setwd("~/Documents/GitHub/StatsI_Fall2024/problemSets/PS03/my_answers")
#Part 2: Scatterplot
png(file = "votesshare_vs_difflog.png")
plot(inc.sub$difflog, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: Incumbent's Vote Share vs Difference in Spending Logged")
abline(regression_model1, col=3, lwd = 2)
plot(inc.sub$difflog, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: Incumbent's Vote Share vs Difference in Spending Logged")
abline(regression_model1, col=3, lwd = 2)
#Part 2: Scatterplot
png(file = "votesshare_vs_difflog.png")
plot(inc.sub$difflog, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: Incumbent's Vote Share vs Difference in Spending Logged")
abline(regression_model1, col=3, lwd = 2)
#Part 2: Scatterplot
png(file = "votesshare_vs_difflog.png")
plot(inc.sub$difflog, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: Incumbent's Vote Share vs Difference in \nSpending Logged")
abline(regression_model1, col=3, lwd = 2)
plot(inc.sub$difflog, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: Incumbent's Vote Share vs Difference in \nSpending Logged")
abline(regression_model1, col=3, lwd = 2)
#Part 2: Scatterplot
png(file = "votesshare_vs_difflog.png")
plot(inc.sub$difflog, inc.sub$presvote,
ylab = "# of Incumbent Party's Presidential Candidates",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged")
abline(regression_model2, col=4, lwd = 2)
#Part 2
png(file = "presvote_vs_difflog.png")
plot(inc.sub$difflog, inc.sub$presvote,
ylab = "# of Incumbent Party's Presidential Candidates",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged")
abline(regression_model2, col=4, lwd = 2)
plot(inc.sub$difflog, inc.sub$presvote,
ylab = "# of Incumbent Party's Presidential Candidates",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged")
abline(regression_model2, col=4, lwd = 2)
#Part 2
png(file = "presvote_vs_difflog.png")
plot(inc.sub$difflog, inc.sub$presvote,
ylab = "# of Incumbent Party's Presidential Candidates",
xlab = "Difference in spending logged between Incumbent and Challenger",
main = "Scatterplot: # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged")
abline(regression_model2, col=4, lwd = 2)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's")
abline(regression_model3, col=2, lwd = 2)
#Problem 4
#Part 1
residual_regression_model <- lm(regression_residuals1 ~ regression_residuals2)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's")
abline(regression_model3, col=2, lwd = 2)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's")
abline(regression_model3, col=2, lwd = 2)
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's")
abline(regression_model3, col=2, lwd = 2)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's Party")
abline(regression_model3, col=2, lwd = 2)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's Party")
abline(regression_model3, col=2, lwd = 2)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's Party")
abline(regression_model3, col=2, lwd = 2)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's Party")
abline(regression_model3, col=2, lwd = 2)
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's Party")
abline(regression_model3, col=2, lwd = 2)
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's Party")
abline(regression_model3, col=2, lwd = 2)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's Party")
abline(regression_model3, col=2, lwd = 2)
#Part 2
png(file = "Q1_vs_Q2.png")
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 vs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 vs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
#Part 2
png(file = "Q1_vs_Q2.png")
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 vs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
png(file = "regression1.png")
summary(regression_model1)
png(file = "regression1.png")
png("regression1.png", width = 800, height = 600)
plot(summary(regression_model1))
dev.off()
png("regression1.png", width = 800, height = 600)
plot(summary(regression_model1))
plot(summary(regression_model1))
png("regression1.png", width = 800, height = 600)
dev.off()
print(summary(regression_model1))
save.image(file="regression1")
#Problem 1
#Part 1: Run the regression
regression_model1 <- lm(voteshare ~ difflog, data = inc.sub)
png(file = "regression1.png")
summary(regression_model1)
save.image(file="regression1")
regression_model <- lm(water ~ reserved, data = women)
summary(regression_model)
regression_model <- lm(water ~ reserved, data = women)
#Problem 1
#Part 1: Run the regression
regression_model1 <- lm(voteshare ~ difflog, data = inc.sub)
png(file = "regression1.png")
summary(regression_model1)
png("regression1.png", width = 800, height = 600)
plot(summary(regression_model1))
dev.off()
png("regression1.png", width = 800, height = 600)
plot(summary(regression_model1))
dev.off()
png("regression1.png", width = 800, height = 600)
summary(regression_model1)
dev.off()
png("regression1.png", width = 800, height = 600)
summary(regression_model1)
dev.off()
summary(regression_model1)
png("regression1.png", width = 800, height = 600)
summary(regression_model1)
dev.off()
# set wd for current folder
setwd("~/Documents/GitHub/StatsI_Fall2024/problemSets/PS03/my_answers")
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2024/main/datasets/incumbents_subset.csv")
head(inc.sub)
View(inc.sub)
#Problem 1
#Part 1: Run the regression
regression_model1 <- lm(voteshare ~ difflog, data = inc.sub)
png(file = "regression1.png")
summary(regression_model1)
png("regression1.png", width = 800, height = 600)
summary(regression_model1)
dev.off()
summary(regression_model1)
summary1 <- summary(regression_model1)
View(summary1)
View(summary1)
View(summary1)
View(summary1)
summary1 <- summary(regression_model1)
summary(regression_model1)
#Part 3: Residuals
regression_residuals1 <- residuals(regression_model1)
summary(regression_residuals1)
#Problem 2
#Part 1
regression_model2 <- lm(presvote ~ difflog, data = inc.sub)
summary(regression_model2)
#Part 3: Residuals
regression_residuals2 <- residuals(regression_model2)
summary(regression_residuals2)
#Problem 3
#Part 1
regression_model3 <- lm(voteshare ~ presvote, data = inc.sub)
summary(regression_model3)
#Part 2
png(file = "votesshare_vs_presvote.png")
plot(inc.sub$presvote, inc.sub$voteshare,
ylab = "Incumbent's Vote share",
xlab = "# of Incumbent Party's Presidential Candidates",
main = "Scatterplot: Incumbent's Vote Share vs # of \nPresidential Candidates of Incumbent's Party")
abline(regression_model3, col=2, lwd = 2)
#Problem 4
#Part 1
residual_regression_model <- lm(regression_residuals1 ~ regression_residuals2)
#Problem 4
#Part 1
residual_regression_model <- lm(regression_residuals1 ~ regression_residuals2)
summary(residual_regression_model)
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 \nvs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
#Part 2
png(file = "Q1_vs_Q2.png")
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 \nvs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 \nvs Residuals of Regression Model 1")
#Part 2
png(file = "Q1_vs_Q2.png")
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 \nvs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
#Part 2
png(file = "Q1_vs_Q2.png")
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 \nvs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
plot(regression_residuals2, regression_residuals1,
ylab = "Residuals of # of Presidential Candidates of Incumbent's \n Party vs. Difference in Spending Logged",
xlab = "Residuals of Incumbent's Vote Share vs Difference in Spending Logged",
main = "Scatterplot: Residauls of Regression Model 2 \nvs Residuals of Regression Model 1")
abline(residual_regression_model, col=6, lwd = 2)
#Problem 5
#Part 1
multivariate_regression <- lm(voteshare ~ difflog + presvote , data = inc.sub)
summary(multivariate_regression)
